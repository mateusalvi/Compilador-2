Terminals unused in grammar

    KW_THEN
    TOKEN_ERROR


State 98 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarations

    2 declarations: declaration declarations
    3             | %empty

    4 declaration: type TK_IDENTIFIER '=' literal ';'
    5            | type TK_IDENTIFIER '(' parameters ')' block
    6            | type TK_IDENTIFIER '[' LIT_INT ']' vectorInicialization ';'

    7 type: KW_INT
    8     | KW_REAL
    9     | KW_CHAR
   10     | KW_BOOL

   11 vectorInicialization: %empty
   12                     | literal vectorInicialization

   13 literal: LIT_INT
   14        | LIT_REAL
   15        | LIT_CHAR
   16        | LIT_STRING

   17 block: '{' commandList '}'

   18 parameters: parameter parameters
   19           | %empty

   20 parameter: type TK_IDENTIFIER

   21 command: flow
   22        | KW_RETURN expression ';'
   23        | KW_OUTPUT LIT_STRING ';'
   24        | block
   25        | ';'
   26        | TK_IDENTIFIER '[' expression ']' '=' expression ';'
   27        | TK_IDENTIFIER '=' expression ';'

   28 commandList: command commandList
   29            | %empty

   30 functionCall: TK_IDENTIFIER '(' expressionList ')'

   31 expressionList: expression ',' expressionList
   32               | expression

   33 flow: KW_IF '(' expression ')' command else
   34     | KW_IF '(' expression ')' KW_LOOP command

   35 else: %empty
   36     | KW_ELSE command

   37 expression: expression '+' expression
   38           | expression '-' expression
   39           | expression '/' expression
   40           | expression '*' expression
   41           | expression '>' expression
   42           | expression '<' expression
   43           | expression '&' expression
   44           | expression '|' expression
   45           | expression '~' expression
   46           | expression OPERATOR_DIF expression
   47           | expression OPERATOR_EQ expression
   48           | expression OPERATOR_GE expression
   49           | expression OPERATOR_LE expression
   50           | '(' expression ')'
   51           | functionCall
   52           | KW_INPUT '(' type ')'
   53           | literal
   54           | TK_IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 43
    '(' (40) 5 30 33 34 50 52
    ')' (41) 5 30 33 34 50 52
    '*' (42) 40
    '+' (43) 37
    ',' (44) 31
    '-' (45) 38
    '/' (47) 39
    ';' (59) 4 6 22 23 25 26 27
    '<' (60) 42
    '=' (61) 4 26 27
    '>' (62) 41
    '[' (91) 6 26
    ']' (93) 6 26
    '{' (123) 17
    '|' (124) 44
    '}' (125) 17
    '~' (126) 45
    error (256)
    KW_INT (258) 7
    KW_REAL (259) 8
    KW_CHAR (260) 9
    KW_BOOL (261) 10
    KW_IF (262) 33 34
    KW_THEN (263)
    KW_ELSE (264) 36
    KW_LOOP (265) 34
    KW_INPUT (266) 52
    KW_OUTPUT (267) 23
    KW_RETURN (268) 22
    OPERATOR_LE (269) 49
    OPERATOR_GE (270) 48
    OPERATOR_EQ (271) 47
    OPERATOR_DIF (272) 46
    TK_IDENTIFIER (273) 4 5 6 20 26 27 30 54
    LIT_INT (274) 6 13
    LIT_REAL (275) 14
    LIT_CHAR (276) 15
    LIT_STRING (277) 16 23
    TOKEN_ERROR (278)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program (43)
        on left: 1
        on right: 0
    declarations (44)
        on left: 2 3
        on right: 1 2
    declaration (45)
        on left: 4 5 6
        on right: 2
    type (46)
        on left: 7 8 9 10
        on right: 4 5 6 20 52
    vectorInicialization (47)
        on left: 11 12
        on right: 6 12
    literal (48)
        on left: 13 14 15 16
        on right: 4 12 53
    block (49)
        on left: 17
        on right: 5 24
    parameters (50)
        on left: 18 19
        on right: 5 18
    parameter (51)
        on left: 20
        on right: 18
    command (52)
        on left: 21 22 23 24 25 26 27
        on right: 28 33 34 36
    commandList (53)
        on left: 28 29
        on right: 17 28
    functionCall (54)
        on left: 30
        on right: 51
    expressionList (55)
        on left: 31 32
        on right: 30 31
    flow (56)
        on left: 33 34
        on right: 21
    else (57)
        on left: 35 36
        on right: 33
    expression (58)
        on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
        on right: 22 26 27 31 32 33 34 37 38 39 40 41 42 43 44 45 46 47 48 49 50


State 0

    0 $accept: . program $end

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 3 (declarations)

    program       go to state 5
    declarations  go to state 6
    declaration   go to state 7
    type          go to state 8


State 1

    7 type: KW_INT .

    $default  reduce using rule 7 (type)


State 2

    8 type: KW_REAL .

    $default  reduce using rule 8 (type)


State 3

    9 type: KW_CHAR .

    $default  reduce using rule 9 (type)


State 4

   10 type: KW_BOOL .

    $default  reduce using rule 10 (type)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 9


State 6

    1 program: declarations .

    $default  reduce using rule 1 (program)


State 7

    2 declarations: declaration . declarations

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 3 (declarations)

    declarations  go to state 10
    declaration   go to state 7
    type          go to state 8


State 8

    4 declaration: type . TK_IDENTIFIER '=' literal ';'
    5            | type . TK_IDENTIFIER '(' parameters ')' block
    6            | type . TK_IDENTIFIER '[' LIT_INT ']' vectorInicialization ';'

    TK_IDENTIFIER  shift, and go to state 11


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declarations: declaration declarations .

    $default  reduce using rule 2 (declarations)


State 11

    4 declaration: type TK_IDENTIFIER . '=' literal ';'
    5            | type TK_IDENTIFIER . '(' parameters ')' block
    6            | type TK_IDENTIFIER . '[' LIT_INT ']' vectorInicialization ';'

    '='  shift, and go to state 12
    '('  shift, and go to state 13
    '['  shift, and go to state 14


State 12

    4 declaration: type TK_IDENTIFIER '=' . literal ';'

    LIT_INT     shift, and go to state 15
    LIT_REAL    shift, and go to state 16
    LIT_CHAR    shift, and go to state 17
    LIT_STRING  shift, and go to state 18

    literal  go to state 19


State 13

    5 declaration: type TK_IDENTIFIER '(' . parameters ')' block

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 19 (parameters)

    type        go to state 20
    parameters  go to state 21
    parameter   go to state 22


State 14

    6 declaration: type TK_IDENTIFIER '[' . LIT_INT ']' vectorInicialization ';'

    LIT_INT  shift, and go to state 23


State 15

   13 literal: LIT_INT .

    $default  reduce using rule 13 (literal)


State 16

   14 literal: LIT_REAL .

    $default  reduce using rule 14 (literal)


State 17

   15 literal: LIT_CHAR .

    $default  reduce using rule 15 (literal)


State 18

   16 literal: LIT_STRING .

    $default  reduce using rule 16 (literal)


State 19

    4 declaration: type TK_IDENTIFIER '=' literal . ';'

    ';'  shift, and go to state 24


State 20

   20 parameter: type . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 25


State 21

    5 declaration: type TK_IDENTIFIER '(' parameters . ')' block

    ')'  shift, and go to state 26


State 22

   18 parameters: parameter . parameters

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 19 (parameters)

    type        go to state 20
    parameters  go to state 27
    parameter   go to state 22


State 23

    6 declaration: type TK_IDENTIFIER '[' LIT_INT . ']' vectorInicialization ';'

    ']'  shift, and go to state 28


State 24

    4 declaration: type TK_IDENTIFIER '=' literal ';' .

    $default  reduce using rule 4 (declaration)


State 25

   20 parameter: type TK_IDENTIFIER .

    $default  reduce using rule 20 (parameter)


State 26

    5 declaration: type TK_IDENTIFIER '(' parameters ')' . block

    '{'  shift, and go to state 29

    block  go to state 30


State 27

   18 parameters: parameter parameters .

    $default  reduce using rule 18 (parameters)


State 28

    6 declaration: type TK_IDENTIFIER '[' LIT_INT ']' . vectorInicialization ';'

    LIT_INT     shift, and go to state 15
    LIT_REAL    shift, and go to state 16
    LIT_CHAR    shift, and go to state 17
    LIT_STRING  shift, and go to state 18

    $default  reduce using rule 11 (vectorInicialization)

    vectorInicialization  go to state 31
    literal               go to state 32


State 29

   17 block: '{' . commandList '}'

    KW_IF          shift, and go to state 33
    KW_OUTPUT      shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    ';'            shift, and go to state 37
    '{'            shift, and go to state 29

    $default  reduce using rule 29 (commandList)

    block        go to state 38
    command      go to state 39
    commandList  go to state 40
    flow         go to state 41


State 30

    5 declaration: type TK_IDENTIFIER '(' parameters ')' block .

    $default  reduce using rule 5 (declaration)


State 31

    6 declaration: type TK_IDENTIFIER '[' LIT_INT ']' vectorInicialization . ';'

    ';'  shift, and go to state 42


State 32

   12 vectorInicialization: literal . vectorInicialization

    LIT_INT     shift, and go to state 15
    LIT_REAL    shift, and go to state 16
    LIT_CHAR    shift, and go to state 17
    LIT_STRING  shift, and go to state 18

    $default  reduce using rule 11 (vectorInicialization)

    vectorInicialization  go to state 43
    literal               go to state 32


State 33

   33 flow: KW_IF . '(' expression ')' command else
   34     | KW_IF . '(' expression ')' KW_LOOP command

    '('  shift, and go to state 44


State 34

   23 command: KW_OUTPUT . LIT_STRING ';'

    LIT_STRING  shift, and go to state 45


State 35

   22 command: KW_RETURN . expression ';'

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 51


State 36

   26 command: TK_IDENTIFIER . '[' expression ']' '=' expression ';'
   27        | TK_IDENTIFIER . '=' expression ';'

    '='  shift, and go to state 52
    '['  shift, and go to state 53


State 37

   25 command: ';' .

    $default  reduce using rule 25 (command)


State 38

   24 command: block .

    $default  reduce using rule 24 (command)


State 39

   28 commandList: command . commandList

    KW_IF          shift, and go to state 33
    KW_OUTPUT      shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    ';'            shift, and go to state 37
    '{'            shift, and go to state 29

    $default  reduce using rule 29 (commandList)

    block        go to state 38
    command      go to state 39
    commandList  go to state 54
    flow         go to state 41


State 40

   17 block: '{' commandList . '}'

    '}'  shift, and go to state 55


State 41

   21 command: flow .

    $default  reduce using rule 21 (command)


State 42

    6 declaration: type TK_IDENTIFIER '[' LIT_INT ']' vectorInicialization ';' .

    $default  reduce using rule 6 (declaration)


State 43

   12 vectorInicialization: literal vectorInicialization .

    $default  reduce using rule 12 (vectorInicialization)


State 44

   33 flow: KW_IF '(' . expression ')' command else
   34     | KW_IF '(' . expression ')' KW_LOOP command

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 56


State 45

   23 command: KW_OUTPUT LIT_STRING . ';'

    ';'  shift, and go to state 57


State 46

   52 expression: KW_INPUT . '(' type ')'

    '('  shift, and go to state 58


State 47

   30 functionCall: TK_IDENTIFIER . '(' expressionList ')'
   54 expression: TK_IDENTIFIER .

    '('  shift, and go to state 59

    $default  reduce using rule 54 (expression)


State 48

   50 expression: '(' . expression ')'

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 60


State 49

   53 expression: literal .

    $default  reduce using rule 53 (expression)


State 50

   51 expression: functionCall .

    $default  reduce using rule 51 (expression)


State 51

   22 command: KW_RETURN expression . ';'
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 61
    OPERATOR_GE   shift, and go to state 62
    OPERATOR_EQ   shift, and go to state 63
    OPERATOR_DIF  shift, and go to state 64
    '<'           shift, and go to state 65
    '>'           shift, and go to state 66
    '&'           shift, and go to state 67
    '|'           shift, and go to state 68
    '~'           shift, and go to state 69
    '+'           shift, and go to state 70
    '-'           shift, and go to state 71
    '*'           shift, and go to state 72
    '/'           shift, and go to state 73
    ';'           shift, and go to state 74


State 52

   27 command: TK_IDENTIFIER '=' . expression ';'

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 75


State 53

   26 command: TK_IDENTIFIER '[' . expression ']' '=' expression ';'

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 76


State 54

   28 commandList: command commandList .

    $default  reduce using rule 28 (commandList)


State 55

   17 block: '{' commandList '}' .

    $default  reduce using rule 17 (block)


State 56

   33 flow: KW_IF '(' expression . ')' command else
   34     | KW_IF '(' expression . ')' KW_LOOP command
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 61
    OPERATOR_GE   shift, and go to state 62
    OPERATOR_EQ   shift, and go to state 63
    OPERATOR_DIF  shift, and go to state 64
    '<'           shift, and go to state 65
    '>'           shift, and go to state 66
    '&'           shift, and go to state 67
    '|'           shift, and go to state 68
    '~'           shift, and go to state 69
    '+'           shift, and go to state 70
    '-'           shift, and go to state 71
    '*'           shift, and go to state 72
    '/'           shift, and go to state 73
    ')'           shift, and go to state 77


State 57

   23 command: KW_OUTPUT LIT_STRING ';' .

    $default  reduce using rule 23 (command)


State 58

   52 expression: KW_INPUT '(' . type ')'

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    type  go to state 78


State 59

   30 functionCall: TK_IDENTIFIER '(' . expressionList ')'

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal         go to state 49
    functionCall    go to state 50
    expressionList  go to state 79
    expression      go to state 80


State 60

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression
   50           | '(' expression . ')'

    OPERATOR_LE   shift, and go to state 61
    OPERATOR_GE   shift, and go to state 62
    OPERATOR_EQ   shift, and go to state 63
    OPERATOR_DIF  shift, and go to state 64
    '<'           shift, and go to state 65
    '>'           shift, and go to state 66
    '&'           shift, and go to state 67
    '|'           shift, and go to state 68
    '~'           shift, and go to state 69
    '+'           shift, and go to state 70
    '-'           shift, and go to state 71
    '*'           shift, and go to state 72
    '/'           shift, and go to state 73
    ')'           shift, and go to state 81


State 61

   49 expression: expression OPERATOR_LE . expression

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 82


State 62

   48 expression: expression OPERATOR_GE . expression

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 83


State 63

   47 expression: expression OPERATOR_EQ . expression

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 84


State 64

   46 expression: expression OPERATOR_DIF . expression

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 85


State 65

   42 expression: expression '<' . expression

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 86


State 66

   41 expression: expression '>' . expression

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 87


State 67

   43 expression: expression '&' . expression

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 88


State 68

   44 expression: expression '|' . expression

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 89


State 69

   45 expression: expression '~' . expression

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 90


State 70

   37 expression: expression '+' . expression

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 91


State 71

   38 expression: expression '-' . expression

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 92


State 72

   40 expression: expression '*' . expression

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 93


State 73

   39 expression: expression '/' . expression

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 94


State 74

   22 command: KW_RETURN expression ';' .

    $default  reduce using rule 22 (command)


State 75

   27 command: TK_IDENTIFIER '=' expression . ';'
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 61
    OPERATOR_GE   shift, and go to state 62
    OPERATOR_EQ   shift, and go to state 63
    OPERATOR_DIF  shift, and go to state 64
    '<'           shift, and go to state 65
    '>'           shift, and go to state 66
    '&'           shift, and go to state 67
    '|'           shift, and go to state 68
    '~'           shift, and go to state 69
    '+'           shift, and go to state 70
    '-'           shift, and go to state 71
    '*'           shift, and go to state 72
    '/'           shift, and go to state 73
    ';'           shift, and go to state 95


State 76

   26 command: TK_IDENTIFIER '[' expression . ']' '=' expression ';'
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 61
    OPERATOR_GE   shift, and go to state 62
    OPERATOR_EQ   shift, and go to state 63
    OPERATOR_DIF  shift, and go to state 64
    '<'           shift, and go to state 65
    '>'           shift, and go to state 66
    '&'           shift, and go to state 67
    '|'           shift, and go to state 68
    '~'           shift, and go to state 69
    '+'           shift, and go to state 70
    '-'           shift, and go to state 71
    '*'           shift, and go to state 72
    '/'           shift, and go to state 73
    ']'           shift, and go to state 96


State 77

   33 flow: KW_IF '(' expression ')' . command else
   34     | KW_IF '(' expression ')' . KW_LOOP command

    KW_IF          shift, and go to state 33
    KW_LOOP        shift, and go to state 97
    KW_OUTPUT      shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    ';'            shift, and go to state 37
    '{'            shift, and go to state 29

    block    go to state 38
    command  go to state 98
    flow     go to state 41


State 78

   52 expression: KW_INPUT '(' type . ')'

    ')'  shift, and go to state 99


State 79

   30 functionCall: TK_IDENTIFIER '(' expressionList . ')'

    ')'  shift, and go to state 100


State 80

   31 expressionList: expression . ',' expressionList
   32               | expression .
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 61
    OPERATOR_GE   shift, and go to state 62
    OPERATOR_EQ   shift, and go to state 63
    OPERATOR_DIF  shift, and go to state 64
    '<'           shift, and go to state 65
    '>'           shift, and go to state 66
    '&'           shift, and go to state 67
    '|'           shift, and go to state 68
    '~'           shift, and go to state 69
    '+'           shift, and go to state 70
    '-'           shift, and go to state 71
    '*'           shift, and go to state 72
    '/'           shift, and go to state 73
    ','           shift, and go to state 101

    $default  reduce using rule 32 (expressionList)


State 81

   50 expression: '(' expression ')' .

    $default  reduce using rule 50 (expression)


State 82

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression
   49           | expression OPERATOR_LE expression .

    '&'  shift, and go to state 67
    '|'  shift, and go to state 68
    '~'  shift, and go to state 69
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 49 (expression)


State 83

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   48           | expression OPERATOR_GE expression .
   49           | expression . OPERATOR_LE expression

    '&'  shift, and go to state 67
    '|'  shift, and go to state 68
    '~'  shift, and go to state 69
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 48 (expression)


State 84

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   47           | expression OPERATOR_EQ expression .
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    '&'  shift, and go to state 67
    '|'  shift, and go to state 68
    '~'  shift, and go to state 69
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 47 (expression)


State 85

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   46           | expression OPERATOR_DIF expression .
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    '&'  shift, and go to state 67
    '|'  shift, and go to state 68
    '~'  shift, and go to state 69
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 46 (expression)


State 86

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   42           | expression '<' expression .
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    '&'  shift, and go to state 67
    '|'  shift, and go to state 68
    '~'  shift, and go to state 69
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 42 (expression)


State 87

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   41           | expression '>' expression .
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    '&'  shift, and go to state 67
    '|'  shift, and go to state 68
    '~'  shift, and go to state 69
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 41 (expression)


State 88

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   43           | expression '&' expression .
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 43 (expression)


State 89

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   44           | expression '|' expression .
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 44 (expression)


State 90

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   45           | expression '~' expression .
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 45 (expression)


State 91

   37 expression: expression . '+' expression
   37           | expression '+' expression .
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 37 (expression)


State 92

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   38           | expression '-' expression .
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 38 (expression)


State 93

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   40           | expression '*' expression .
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    $default  reduce using rule 40 (expression)


State 94

   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   39           | expression '/' expression .
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    $default  reduce using rule 39 (expression)


State 95

   27 command: TK_IDENTIFIER '=' expression ';' .

    $default  reduce using rule 27 (command)


State 96

   26 command: TK_IDENTIFIER '[' expression ']' . '=' expression ';'

    '='  shift, and go to state 102


State 97

   34 flow: KW_IF '(' expression ')' KW_LOOP . command

    KW_IF          shift, and go to state 33
    KW_OUTPUT      shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    ';'            shift, and go to state 37
    '{'            shift, and go to state 29

    block    go to state 38
    command  go to state 103
    flow     go to state 41


State 98

   33 flow: KW_IF '(' expression ')' command . else

    KW_ELSE  shift, and go to state 104

    KW_ELSE   [reduce using rule 35 (else)]
    $default  reduce using rule 35 (else)

    else  go to state 105


State 99

   52 expression: KW_INPUT '(' type ')' .

    $default  reduce using rule 52 (expression)


State 100

   30 functionCall: TK_IDENTIFIER '(' expressionList ')' .

    $default  reduce using rule 30 (functionCall)


State 101

   31 expressionList: expression ',' . expressionList

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal         go to state 49
    functionCall    go to state 50
    expressionList  go to state 106
    expression      go to state 80


State 102

   26 command: TK_IDENTIFIER '[' expression ']' '=' . expression ';'

    KW_INPUT       shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 48

    literal       go to state 49
    functionCall  go to state 50
    expression    go to state 107


State 103

   34 flow: KW_IF '(' expression ')' KW_LOOP command .

    $default  reduce using rule 34 (flow)


State 104

   36 else: KW_ELSE . command

    KW_IF          shift, and go to state 33
    KW_OUTPUT      shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    ';'            shift, and go to state 37
    '{'            shift, and go to state 29

    block    go to state 38
    command  go to state 108
    flow     go to state 41


State 105

   33 flow: KW_IF '(' expression ')' command else .

    $default  reduce using rule 33 (flow)


State 106

   31 expressionList: expression ',' expressionList .

    $default  reduce using rule 31 (expressionList)


State 107

   26 command: TK_IDENTIFIER '[' expression ']' '=' expression . ';'
   37 expression: expression . '+' expression
   38           | expression . '-' expression
   39           | expression . '/' expression
   40           | expression . '*' expression
   41           | expression . '>' expression
   42           | expression . '<' expression
   43           | expression . '&' expression
   44           | expression . '|' expression
   45           | expression . '~' expression
   46           | expression . OPERATOR_DIF expression
   47           | expression . OPERATOR_EQ expression
   48           | expression . OPERATOR_GE expression
   49           | expression . OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 61
    OPERATOR_GE   shift, and go to state 62
    OPERATOR_EQ   shift, and go to state 63
    OPERATOR_DIF  shift, and go to state 64
    '<'           shift, and go to state 65
    '>'           shift, and go to state 66
    '&'           shift, and go to state 67
    '|'           shift, and go to state 68
    '~'           shift, and go to state 69
    '+'           shift, and go to state 70
    '-'           shift, and go to state 71
    '*'           shift, and go to state 72
    '/'           shift, and go to state 73
    ';'           shift, and go to state 109


State 108

   36 else: KW_ELSE command .

    $default  reduce using rule 36 (else)


State 109

   26 command: TK_IDENTIFIER '[' expression ']' '=' expression ';' .

    $default  reduce using rule 26 (command)
