Terminals unused in grammar

    KW_THEN
    TOKEN_ERROR


State 97 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarations

    2 declarations: declaration declarations
    3             | %empty

    4 declaration: type TK_IDENTIFIER '=' literal ';'
    5            | type TK_IDENTIFIER '(' parameters ')' block
    6            | type TK_IDENTIFIER '[' LIT_INT ']' vectorInicialization ';'

    7 type: KW_INT
    8     | KW_REAL
    9     | KW_CHAR
   10     | KW_BOOL

   11 vectorInicialization: %empty
   12                     | literal vectorInicialization

   13 literal: LIT_INT
   14        | LIT_REAL
   15        | LIT_CHAR
   16        | LIT_STRING

   17 block: '{' commandList '}'

   18 parameters: %empty
   19           | parameter parameters

   20 parameter: type TK_IDENTIFIER

   21 command: %empty
   22        | flow
   23        | KW_RETURN expression
   24        | KW_OUTPUT LIT_STRING
   25        | block
   26        | TK_IDENTIFIER '[' expression ']' '=' expression
   27        | TK_IDENTIFIER '=' expression

   28 commandList: command commandListEnd

   29 commandListEnd: %empty
   30               | ';' command commandListEnd

   31 functionCall: TK_IDENTIFIER '(' expressionList ')'

   32 expressionList: expression ',' expressionList
   33               | expression

   34 flow: KW_IF '(' expression ')' command else
   35     | KW_IF '(' expression ')' KW_LOOP command

   36 else: %empty
   37     | KW_ELSE command

   38 expression: expression '+' expression
   39           | expression '-' expression
   40           | expression '/' expression
   41           | expression '*' expression
   42           | expression '>' expression
   43           | expression '<' expression
   44           | expression '&' expression
   45           | expression '|' expression
   46           | expression '~' expression
   47           | expression OPERATOR_DIF expression
   48           | expression OPERATOR_EQ expression
   49           | expression OPERATOR_GE expression
   50           | expression OPERATOR_LE expression
   51           | '(' expression ')'
   52           | functionCall
   53           | KW_INPUT '(' type ')'
   54           | literal
   55           | TK_IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 44
    '(' (40) 5 31 34 35 51 53
    ')' (41) 5 31 34 35 51 53
    '*' (42) 41
    '+' (43) 38
    ',' (44) 32
    '-' (45) 39
    '/' (47) 40
    ';' (59) 4 6 30
    '<' (60) 43
    '=' (61) 4 26 27
    '>' (62) 42
    '[' (91) 6 26
    ']' (93) 6 26
    '{' (123) 17
    '|' (124) 45
    '}' (125) 17
    '~' (126) 46
    error (256)
    KW_INT (258) 7
    KW_REAL (259) 8
    KW_CHAR (260) 9
    KW_BOOL (261) 10
    KW_IF (262) 34 35
    KW_THEN (263)
    KW_ELSE (264) 37
    KW_LOOP (265) 35
    KW_INPUT (266) 53
    KW_OUTPUT (267) 24
    KW_RETURN (268) 23
    OPERATOR_LE (269) 50
    OPERATOR_GE (270) 49
    OPERATOR_EQ (271) 48
    OPERATOR_DIF (272) 47
    TK_IDENTIFIER (273) 4 5 6 20 26 27 31 55
    LIT_INT (274) 6 13
    LIT_REAL (275) 14
    LIT_CHAR (276) 15
    LIT_STRING (277) 16 24
    TOKEN_ERROR (278)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program (43)
        on left: 1
        on right: 0
    declarations (44)
        on left: 2 3
        on right: 1 2
    declaration (45)
        on left: 4 5 6
        on right: 2
    type (46)
        on left: 7 8 9 10
        on right: 4 5 6 20 53
    vectorInicialization (47)
        on left: 11 12
        on right: 6 12
    literal (48)
        on left: 13 14 15 16
        on right: 4 12 54
    block (49)
        on left: 17
        on right: 5 25
    parameters (50)
        on left: 18 19
        on right: 5 19
    parameter (51)
        on left: 20
        on right: 19
    command (52)
        on left: 21 22 23 24 25 26 27
        on right: 28 30 34 35 37
    commandList (53)
        on left: 28
        on right: 17
    commandListEnd (54)
        on left: 29 30
        on right: 28 30
    functionCall (55)
        on left: 31
        on right: 52
    expressionList (56)
        on left: 32 33
        on right: 31 32
    flow (57)
        on left: 34 35
        on right: 22
    else (58)
        on left: 36 37
        on right: 34
    expression (59)
        on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
        on right: 23 26 27 32 33 34 35 38 39 40 41 42 43 44 45 46 47 48 49 50 51


State 0

    0 $accept: . program $end

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 3 (declarations)

    program       go to state 5
    declarations  go to state 6
    declaration   go to state 7
    type          go to state 8


State 1

    7 type: KW_INT .

    $default  reduce using rule 7 (type)


State 2

    8 type: KW_REAL .

    $default  reduce using rule 8 (type)


State 3

    9 type: KW_CHAR .

    $default  reduce using rule 9 (type)


State 4

   10 type: KW_BOOL .

    $default  reduce using rule 10 (type)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 9


State 6

    1 program: declarations .

    $default  reduce using rule 1 (program)


State 7

    2 declarations: declaration . declarations

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 3 (declarations)

    declarations  go to state 10
    declaration   go to state 7
    type          go to state 8


State 8

    4 declaration: type . TK_IDENTIFIER '=' literal ';'
    5            | type . TK_IDENTIFIER '(' parameters ')' block
    6            | type . TK_IDENTIFIER '[' LIT_INT ']' vectorInicialization ';'

    TK_IDENTIFIER  shift, and go to state 11


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declarations: declaration declarations .

    $default  reduce using rule 2 (declarations)


State 11

    4 declaration: type TK_IDENTIFIER . '=' literal ';'
    5            | type TK_IDENTIFIER . '(' parameters ')' block
    6            | type TK_IDENTIFIER . '[' LIT_INT ']' vectorInicialization ';'

    '='  shift, and go to state 12
    '('  shift, and go to state 13
    '['  shift, and go to state 14


State 12

    4 declaration: type TK_IDENTIFIER '=' . literal ';'

    LIT_INT     shift, and go to state 15
    LIT_REAL    shift, and go to state 16
    LIT_CHAR    shift, and go to state 17
    LIT_STRING  shift, and go to state 18

    literal  go to state 19


State 13

    5 declaration: type TK_IDENTIFIER '(' . parameters ')' block

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 18 (parameters)

    type        go to state 20
    parameters  go to state 21
    parameter   go to state 22


State 14

    6 declaration: type TK_IDENTIFIER '[' . LIT_INT ']' vectorInicialization ';'

    LIT_INT  shift, and go to state 23


State 15

   13 literal: LIT_INT .

    $default  reduce using rule 13 (literal)


State 16

   14 literal: LIT_REAL .

    $default  reduce using rule 14 (literal)


State 17

   15 literal: LIT_CHAR .

    $default  reduce using rule 15 (literal)


State 18

   16 literal: LIT_STRING .

    $default  reduce using rule 16 (literal)


State 19

    4 declaration: type TK_IDENTIFIER '=' literal . ';'

    ';'  shift, and go to state 24


State 20

   20 parameter: type . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 25


State 21

    5 declaration: type TK_IDENTIFIER '(' parameters . ')' block

    ')'  shift, and go to state 26


State 22

   19 parameters: parameter . parameters

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 18 (parameters)

    type        go to state 20
    parameters  go to state 27
    parameter   go to state 22


State 23

    6 declaration: type TK_IDENTIFIER '[' LIT_INT . ']' vectorInicialization ';'

    ']'  shift, and go to state 28


State 24

    4 declaration: type TK_IDENTIFIER '=' literal ';' .

    $default  reduce using rule 4 (declaration)


State 25

   20 parameter: type TK_IDENTIFIER .

    $default  reduce using rule 20 (parameter)


State 26

    5 declaration: type TK_IDENTIFIER '(' parameters ')' . block

    '{'  shift, and go to state 29

    block  go to state 30


State 27

   19 parameters: parameter parameters .

    $default  reduce using rule 19 (parameters)


State 28

    6 declaration: type TK_IDENTIFIER '[' LIT_INT ']' . vectorInicialization ';'

    LIT_INT     shift, and go to state 15
    LIT_REAL    shift, and go to state 16
    LIT_CHAR    shift, and go to state 17
    LIT_STRING  shift, and go to state 18

    $default  reduce using rule 11 (vectorInicialization)

    vectorInicialization  go to state 31
    literal               go to state 32


State 29

   17 block: '{' . commandList '}'

    KW_IF          shift, and go to state 33
    KW_OUTPUT      shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    '{'            shift, and go to state 29

    $default  reduce using rule 21 (command)

    block        go to state 37
    command      go to state 38
    commandList  go to state 39
    flow         go to state 40


State 30

    5 declaration: type TK_IDENTIFIER '(' parameters ')' block .

    $default  reduce using rule 5 (declaration)


State 31

    6 declaration: type TK_IDENTIFIER '[' LIT_INT ']' vectorInicialization . ';'

    ';'  shift, and go to state 41


State 32

   12 vectorInicialization: literal . vectorInicialization

    LIT_INT     shift, and go to state 15
    LIT_REAL    shift, and go to state 16
    LIT_CHAR    shift, and go to state 17
    LIT_STRING  shift, and go to state 18

    $default  reduce using rule 11 (vectorInicialization)

    vectorInicialization  go to state 42
    literal               go to state 32


State 33

   34 flow: KW_IF . '(' expression ')' command else
   35     | KW_IF . '(' expression ')' KW_LOOP command

    '('  shift, and go to state 43


State 34

   24 command: KW_OUTPUT . LIT_STRING

    LIT_STRING  shift, and go to state 44


State 35

   23 command: KW_RETURN . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 50


State 36

   26 command: TK_IDENTIFIER . '[' expression ']' '=' expression
   27        | TK_IDENTIFIER . '=' expression

    '='  shift, and go to state 51
    '['  shift, and go to state 52


State 37

   25 command: block .

    $default  reduce using rule 25 (command)


State 38

   28 commandList: command . commandListEnd

    ';'  shift, and go to state 53

    $default  reduce using rule 29 (commandListEnd)

    commandListEnd  go to state 54


State 39

   17 block: '{' commandList . '}'

    '}'  shift, and go to state 55


State 40

   22 command: flow .

    $default  reduce using rule 22 (command)


State 41

    6 declaration: type TK_IDENTIFIER '[' LIT_INT ']' vectorInicialization ';' .

    $default  reduce using rule 6 (declaration)


State 42

   12 vectorInicialization: literal vectorInicialization .

    $default  reduce using rule 12 (vectorInicialization)


State 43

   34 flow: KW_IF '(' . expression ')' command else
   35     | KW_IF '(' . expression ')' KW_LOOP command

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 56


State 44

   24 command: KW_OUTPUT LIT_STRING .

    $default  reduce using rule 24 (command)


State 45

   53 expression: KW_INPUT . '(' type ')'

    '('  shift, and go to state 57


State 46

   31 functionCall: TK_IDENTIFIER . '(' expressionList ')'
   55 expression: TK_IDENTIFIER .

    '('  shift, and go to state 58

    $default  reduce using rule 55 (expression)


State 47

   51 expression: '(' . expression ')'

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 59


State 48

   54 expression: literal .

    $default  reduce using rule 54 (expression)


State 49

   52 expression: functionCall .

    $default  reduce using rule 52 (expression)


State 50

   23 command: KW_RETURN expression .
   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_DIF  shift, and go to state 63
    '<'           shift, and go to state 64
    '>'           shift, and go to state 65
    '&'           shift, and go to state 66
    '|'           shift, and go to state 67
    '~'           shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    '*'           shift, and go to state 71
    '/'           shift, and go to state 72

    $default  reduce using rule 23 (command)


State 51

   27 command: TK_IDENTIFIER '=' . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 73


State 52

   26 command: TK_IDENTIFIER '[' . expression ']' '=' expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 74


State 53

   30 commandListEnd: ';' . command commandListEnd

    KW_IF          shift, and go to state 33
    KW_OUTPUT      shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    '{'            shift, and go to state 29

    $default  reduce using rule 21 (command)

    block    go to state 37
    command  go to state 75
    flow     go to state 40


State 54

   28 commandList: command commandListEnd .

    $default  reduce using rule 28 (commandList)


State 55

   17 block: '{' commandList '}' .

    $default  reduce using rule 17 (block)


State 56

   34 flow: KW_IF '(' expression . ')' command else
   35     | KW_IF '(' expression . ')' KW_LOOP command
   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_DIF  shift, and go to state 63
    '<'           shift, and go to state 64
    '>'           shift, and go to state 65
    '&'           shift, and go to state 66
    '|'           shift, and go to state 67
    '~'           shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    '*'           shift, and go to state 71
    '/'           shift, and go to state 72
    ')'           shift, and go to state 76


State 57

   53 expression: KW_INPUT '(' . type ')'

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    type  go to state 77


State 58

   31 functionCall: TK_IDENTIFIER '(' . expressionList ')'

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal         go to state 48
    functionCall    go to state 49
    expressionList  go to state 78
    expression      go to state 79


State 59

   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression
   51           | '(' expression . ')'

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_DIF  shift, and go to state 63
    '<'           shift, and go to state 64
    '>'           shift, and go to state 65
    '&'           shift, and go to state 66
    '|'           shift, and go to state 67
    '~'           shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    '*'           shift, and go to state 71
    '/'           shift, and go to state 72
    ')'           shift, and go to state 80


State 60

   50 expression: expression OPERATOR_LE . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 81


State 61

   49 expression: expression OPERATOR_GE . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 82


State 62

   48 expression: expression OPERATOR_EQ . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 83


State 63

   47 expression: expression OPERATOR_DIF . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 84


State 64

   43 expression: expression '<' . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 85


State 65

   42 expression: expression '>' . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 86


State 66

   44 expression: expression '&' . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 87


State 67

   45 expression: expression '|' . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 88


State 68

   46 expression: expression '~' . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 89


State 69

   38 expression: expression '+' . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 90


State 70

   39 expression: expression '-' . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 91


State 71

   41 expression: expression '*' . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 92


State 72

   40 expression: expression '/' . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 93


State 73

   27 command: TK_IDENTIFIER '=' expression .
   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_DIF  shift, and go to state 63
    '<'           shift, and go to state 64
    '>'           shift, and go to state 65
    '&'           shift, and go to state 66
    '|'           shift, and go to state 67
    '~'           shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    '*'           shift, and go to state 71
    '/'           shift, and go to state 72

    $default  reduce using rule 27 (command)


State 74

   26 command: TK_IDENTIFIER '[' expression . ']' '=' expression
   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_DIF  shift, and go to state 63
    '<'           shift, and go to state 64
    '>'           shift, and go to state 65
    '&'           shift, and go to state 66
    '|'           shift, and go to state 67
    '~'           shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    '*'           shift, and go to state 71
    '/'           shift, and go to state 72
    ']'           shift, and go to state 94


State 75

   30 commandListEnd: ';' command . commandListEnd

    ';'  shift, and go to state 53

    $default  reduce using rule 29 (commandListEnd)

    commandListEnd  go to state 95


State 76

   34 flow: KW_IF '(' expression ')' . command else
   35     | KW_IF '(' expression ')' . KW_LOOP command

    KW_IF          shift, and go to state 33
    KW_LOOP        shift, and go to state 96
    KW_OUTPUT      shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    '{'            shift, and go to state 29

    $default  reduce using rule 21 (command)

    block    go to state 37
    command  go to state 97
    flow     go to state 40


State 77

   53 expression: KW_INPUT '(' type . ')'

    ')'  shift, and go to state 98


State 78

   31 functionCall: TK_IDENTIFIER '(' expressionList . ')'

    ')'  shift, and go to state 99


State 79

   32 expressionList: expression . ',' expressionList
   33               | expression .
   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_DIF  shift, and go to state 63
    '<'           shift, and go to state 64
    '>'           shift, and go to state 65
    '&'           shift, and go to state 66
    '|'           shift, and go to state 67
    '~'           shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    '*'           shift, and go to state 71
    '/'           shift, and go to state 72
    ','           shift, and go to state 100

    $default  reduce using rule 33 (expressionList)


State 80

   51 expression: '(' expression ')' .

    $default  reduce using rule 51 (expression)


State 81

   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression
   50           | expression OPERATOR_LE expression .

    '&'  shift, and go to state 66
    '|'  shift, and go to state 67
    '~'  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 50 (expression)


State 82

   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   49           | expression OPERATOR_GE expression .
   50           | expression . OPERATOR_LE expression

    '&'  shift, and go to state 66
    '|'  shift, and go to state 67
    '~'  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 49 (expression)


State 83

   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   48           | expression OPERATOR_EQ expression .
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    '&'  shift, and go to state 66
    '|'  shift, and go to state 67
    '~'  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 48 (expression)


State 84

   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   47           | expression OPERATOR_DIF expression .
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    '&'  shift, and go to state 66
    '|'  shift, and go to state 67
    '~'  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 47 (expression)


State 85

   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   43           | expression '<' expression .
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    '&'  shift, and go to state 66
    '|'  shift, and go to state 67
    '~'  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 43 (expression)


State 86

   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   42           | expression '>' expression .
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    '&'  shift, and go to state 66
    '|'  shift, and go to state 67
    '~'  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 42 (expression)


State 87

   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   44           | expression '&' expression .
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 44 (expression)


State 88

   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   45           | expression '|' expression .
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 45 (expression)


State 89

   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   46           | expression '~' expression .
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 46 (expression)


State 90

   38 expression: expression . '+' expression
   38           | expression '+' expression .
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 38 (expression)


State 91

   38 expression: expression . '+' expression
   39           | expression . '-' expression
   39           | expression '-' expression .
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    '*'  shift, and go to state 71
    '/'  shift, and go to state 72

    $default  reduce using rule 39 (expression)


State 92

   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   41           | expression '*' expression .
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    $default  reduce using rule 41 (expression)


State 93

   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   40           | expression '/' expression .
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    $default  reduce using rule 40 (expression)


State 94

   26 command: TK_IDENTIFIER '[' expression ']' . '=' expression

    '='  shift, and go to state 101


State 95

   30 commandListEnd: ';' command commandListEnd .

    $default  reduce using rule 30 (commandListEnd)


State 96

   35 flow: KW_IF '(' expression ')' KW_LOOP . command

    KW_IF          shift, and go to state 33
    KW_OUTPUT      shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    '{'            shift, and go to state 29

    $default  reduce using rule 21 (command)

    block    go to state 37
    command  go to state 102
    flow     go to state 40


State 97

   34 flow: KW_IF '(' expression ')' command . else

    KW_ELSE  shift, and go to state 103

    KW_ELSE   [reduce using rule 36 (else)]
    $default  reduce using rule 36 (else)

    else  go to state 104


State 98

   53 expression: KW_INPUT '(' type ')' .

    $default  reduce using rule 53 (expression)


State 99

   31 functionCall: TK_IDENTIFIER '(' expressionList ')' .

    $default  reduce using rule 31 (functionCall)


State 100

   32 expressionList: expression ',' . expressionList

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal         go to state 48
    functionCall    go to state 49
    expressionList  go to state 105
    expression      go to state 79


State 101

   26 command: TK_IDENTIFIER '[' expression ']' '=' . expression

    KW_INPUT       shift, and go to state 45
    TK_IDENTIFIER  shift, and go to state 46
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 18
    '('            shift, and go to state 47

    literal       go to state 48
    functionCall  go to state 49
    expression    go to state 106


State 102

   35 flow: KW_IF '(' expression ')' KW_LOOP command .

    $default  reduce using rule 35 (flow)


State 103

   37 else: KW_ELSE . command

    KW_IF          shift, and go to state 33
    KW_OUTPUT      shift, and go to state 34
    KW_RETURN      shift, and go to state 35
    TK_IDENTIFIER  shift, and go to state 36
    '{'            shift, and go to state 29

    $default  reduce using rule 21 (command)

    block    go to state 37
    command  go to state 107
    flow     go to state 40


State 104

   34 flow: KW_IF '(' expression ')' command else .

    $default  reduce using rule 34 (flow)


State 105

   32 expressionList: expression ',' expressionList .

    $default  reduce using rule 32 (expressionList)


State 106

   26 command: TK_IDENTIFIER '[' expression ']' '=' expression .
   38 expression: expression . '+' expression
   39           | expression . '-' expression
   40           | expression . '/' expression
   41           | expression . '*' expression
   42           | expression . '>' expression
   43           | expression . '<' expression
   44           | expression . '&' expression
   45           | expression . '|' expression
   46           | expression . '~' expression
   47           | expression . OPERATOR_DIF expression
   48           | expression . OPERATOR_EQ expression
   49           | expression . OPERATOR_GE expression
   50           | expression . OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 60
    OPERATOR_GE   shift, and go to state 61
    OPERATOR_EQ   shift, and go to state 62
    OPERATOR_DIF  shift, and go to state 63
    '<'           shift, and go to state 64
    '>'           shift, and go to state 65
    '&'           shift, and go to state 66
    '|'           shift, and go to state 67
    '~'           shift, and go to state 68
    '+'           shift, and go to state 69
    '-'           shift, and go to state 70
    '*'           shift, and go to state 71
    '/'           shift, and go to state 72

    $default  reduce using rule 26 (command)


State 107

   37 else: KW_ELSE command .

    $default  reduce using rule 37 (else)
