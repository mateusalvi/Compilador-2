Terminals unused in grammar

    KW_THEN
    TOKEN_ERROR


State 79 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarations

    2 declarations: declaration declarations
    3             | ε

    4 declaration: type TK_IDENTIFIER '=' literal ';'
    5            | type TK_IDENTIFIER '(' parameters ')' block
    6            | type TK_IDENTIFIER '[' expression ']' vectorInicialization ';'

    7 type: KW_INT
    8     | KW_REAL
    9     | KW_CHAR
   10     | KW_BOOL

   11 vectorInicialization: ε
   12                     | literal vectorInicialization

   13 literal: LIT_INT
   14        | LIT_REAL
   15        | LIT_CHAR

   16 block: '{' commandList '}'

   17 parameters: ε
   18           | parameter parametersTail

   19 parametersTail: ε
   20               | ',' parameter parametersTail

   21 parameter: type TK_IDENTIFIER

   22 command: KW_IF '(' expression ')' command KW_ELSE command
   23        | KW_IF '(' expression ')' command
   24        | KW_IF '(' expression ')' KW_LOOP command
   25        | KW_RETURN expression ';'
   26        | KW_OUTPUT outputParameters ';'
   27        | TK_IDENTIFIER '[' expression ']' '=' expression ';'
   28        | TK_IDENTIFIER '=' expression ';'
   29        | block
   30        | ';'
   31        | '{' '}'

   32 outputParameters: expression outputParametersTail
   33                 | LIT_STRING outputParametersTail

   34 outputParametersTail: ε
   35                     | ',' outputParameters outputParametersTail

   36 commandList: ε
   37            | command commandList

   38 functionCall: TK_IDENTIFIER '(' expressionList ')'

   39 expressionList: ε
   40               | expression expressionListTail

   41 expressionListTail: ε
   42                   | ',' expression expressionListTail

   43 expression: expression '+' expression
   44           | expression '-' expression
   45           | expression '/' expression
   46           | expression '*' expression
   47           | expression '>' expression
   48           | expression '<' expression
   49           | expression '&' expression
   50           | expression '|' expression
   51           | '~' expression
   52           | expression OPERATOR_DIF expression
   53           | expression OPERATOR_EQ expression
   54           | expression OPERATOR_GE expression
   55           | expression OPERATOR_LE expression
   56           | '(' expression ')'
   57           | functionCall
   58           | KW_INPUT '(' type ')'
   59           | literal
   60           | TK_IDENTIFIER '[' expression ']'
   61           | TK_IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 49
    '(' (40) 5 22 23 24 38 56 58
    ')' (41) 5 22 23 24 38 56 58
    '*' (42) 46
    '+' (43) 43
    ',' (44) 20 35 42
    '-' (45) 44
    '/' (47) 45
    ';' (59) 4 6 25 26 27 28 30
    '<' (60) 48
    '=' (61) 4 27 28
    '>' (62) 47
    '[' (91) 6 27 60
    ']' (93) 6 27 60
    '{' (123) 16 31
    '|' (124) 50
    '}' (125) 16 31
    '~' (126) 51
    error (256)
    KW_INT (258) 7
    KW_REAL (259) 8
    KW_CHAR (260) 9
    KW_BOOL (261) 10
    KW_IF (262) 22 23 24
    KW_THEN (263)
    KW_ELSE (264) 22
    KW_LOOP (265) 24
    KW_INPUT (266) 58
    KW_OUTPUT (267) 26
    KW_RETURN (268) 25
    OPERATOR_LE (269) 55
    OPERATOR_GE (270) 54
    OPERATOR_EQ (271) 53
    OPERATOR_DIF (272) 52
    TK_IDENTIFIER <symbol> (273) 4 5 6 21 27 28 38 60 61
    LIT_INT <symbol> (274) 13
    LIT_REAL <symbol> (275) 14
    LIT_CHAR <symbol> (276) 15
    LIT_STRING <symbol> (277) 33
    TOKEN_ERROR (278)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program <node> (43)
        on left: 1
        on right: 0
    declarations <node> (44)
        on left: 2 3
        on right: 1 2
    declaration <node> (45)
        on left: 4 5 6
        on right: 2
    type <node> (46)
        on left: 7 8 9 10
        on right: 4 5 6 21 58
    vectorInicialization <node> (47)
        on left: 11 12
        on right: 6 12
    literal <node> (48)
        on left: 13 14 15
        on right: 4 12 59
    block <node> (49)
        on left: 16
        on right: 5 29
    parameters <node> (50)
        on left: 17 18
        on right: 5
    parametersTail <node> (51)
        on left: 19 20
        on right: 18 20
    parameter <node> (52)
        on left: 21
        on right: 18 20
    command <node> (53)
        on left: 22 23 24 25 26 27 28 29 30 31
        on right: 22 23 24 37
    outputParameters <node> (54)
        on left: 32 33
        on right: 26 35
    outputParametersTail <node> (55)
        on left: 34 35
        on right: 32 33 35
    commandList <node> (56)
        on left: 36 37
        on right: 16 37
    functionCall <node> (57)
        on left: 38
        on right: 57
    expressionList <node> (58)
        on left: 39 40
        on right: 38
    expressionListTail <node> (59)
        on left: 41 42
        on right: 40 42
    expression <node> (60)
        on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
        on right: 6 22 23 24 25 27 28 32 40 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 60


State 0

    0 $accept: • program $end

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 3 (declarations)

    program       go to state 5
    declarations  go to state 6
    declaration   go to state 7
    type          go to state 8


State 1

    7 type: KW_INT •

    $default  reduce using rule 7 (type)


State 2

    8 type: KW_REAL •

    $default  reduce using rule 8 (type)


State 3

    9 type: KW_CHAR •

    $default  reduce using rule 9 (type)


State 4

   10 type: KW_BOOL •

    $default  reduce using rule 10 (type)


State 5

    0 $accept: program • $end

    $end  shift, and go to state 9


State 6

    1 program: declarations •

    $default  reduce using rule 1 (program)


State 7

    2 declarations: declaration • declarations

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 3 (declarations)

    declarations  go to state 10
    declaration   go to state 7
    type          go to state 8


State 8

    4 declaration: type • TK_IDENTIFIER '=' literal ';'
    5            | type • TK_IDENTIFIER '(' parameters ')' block
    6            | type • TK_IDENTIFIER '[' expression ']' vectorInicialization ';'

    TK_IDENTIFIER  shift, and go to state 11


State 9

    0 $accept: program $end •

    $default  accept


State 10

    2 declarations: declaration declarations •

    $default  reduce using rule 2 (declarations)


State 11

    4 declaration: type TK_IDENTIFIER • '=' literal ';'
    5            | type TK_IDENTIFIER • '(' parameters ')' block
    6            | type TK_IDENTIFIER • '[' expression ']' vectorInicialization ';'

    '='  shift, and go to state 12
    '('  shift, and go to state 13
    '['  shift, and go to state 14


State 12

    4 declaration: type TK_IDENTIFIER '=' • literal ';'

    LIT_INT   shift, and go to state 15
    LIT_REAL  shift, and go to state 16
    LIT_CHAR  shift, and go to state 17

    literal  go to state 18


State 13

    5 declaration: type TK_IDENTIFIER '(' • parameters ')' block

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 17 (parameters)

    type        go to state 19
    parameters  go to state 20
    parameter   go to state 21


State 14

    6 declaration: type TK_IDENTIFIER '[' • expression ']' vectorInicialization ';'

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 28


State 15

   13 literal: LIT_INT •

    $default  reduce using rule 13 (literal)


State 16

   14 literal: LIT_REAL •

    $default  reduce using rule 14 (literal)


State 17

   15 literal: LIT_CHAR •

    $default  reduce using rule 15 (literal)


State 18

    4 declaration: type TK_IDENTIFIER '=' literal • ';'

    ';'  shift, and go to state 29


State 19

   21 parameter: type • TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 30


State 20

    5 declaration: type TK_IDENTIFIER '(' parameters • ')' block

    ')'  shift, and go to state 31


State 21

   18 parameters: parameter • parametersTail

    ','  shift, and go to state 32

    $default  reduce using rule 19 (parametersTail)

    parametersTail  go to state 33


State 22

   58 expression: KW_INPUT • '(' type ')'

    '('  shift, and go to state 34


State 23

   38 functionCall: TK_IDENTIFIER • '(' expressionList ')'
   60 expression: TK_IDENTIFIER • '[' expression ']'
   61           | TK_IDENTIFIER •

    '('  shift, and go to state 35
    '['  shift, and go to state 36

    $default  reduce using rule 61 (expression)


State 24

   51 expression: '~' • expression

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 37


State 25

   56 expression: '(' • expression ')'

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 38


State 26

   59 expression: literal •

    $default  reduce using rule 59 (expression)


State 27

   57 expression: functionCall •

    $default  reduce using rule 57 (expression)


State 28

    6 declaration: type TK_IDENTIFIER '[' expression • ']' vectorInicialization ';'
   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 39
    OPERATOR_GE   shift, and go to state 40
    OPERATOR_EQ   shift, and go to state 41
    OPERATOR_DIF  shift, and go to state 42
    '<'           shift, and go to state 43
    '>'           shift, and go to state 44
    '&'           shift, and go to state 45
    '|'           shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '*'           shift, and go to state 49
    '/'           shift, and go to state 50
    ']'           shift, and go to state 51


State 29

    4 declaration: type TK_IDENTIFIER '=' literal ';' •

    $default  reduce using rule 4 (declaration)


State 30

   21 parameter: type TK_IDENTIFIER •

    $default  reduce using rule 21 (parameter)


State 31

    5 declaration: type TK_IDENTIFIER '(' parameters ')' • block

    '{'  shift, and go to state 52

    block  go to state 53


State 32

   20 parametersTail: ',' • parameter parametersTail

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    type       go to state 19
    parameter  go to state 54


State 33

   18 parameters: parameter parametersTail •

    $default  reduce using rule 18 (parameters)


State 34

   58 expression: KW_INPUT '(' • type ')'

    KW_INT   shift, and go to state 1
    KW_REAL  shift, and go to state 2
    KW_CHAR  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    type  go to state 55


State 35

   38 functionCall: TK_IDENTIFIER '(' • expressionList ')'

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    $default  reduce using rule 39 (expressionList)

    literal         go to state 26
    functionCall    go to state 27
    expressionList  go to state 56
    expression      go to state 57


State 36

   60 expression: TK_IDENTIFIER '[' • expression ']'

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 58


State 37

   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   51           | '~' expression •
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 51 (expression)


State 38

   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression
   56           | '(' expression • ')'

    OPERATOR_LE   shift, and go to state 39
    OPERATOR_GE   shift, and go to state 40
    OPERATOR_EQ   shift, and go to state 41
    OPERATOR_DIF  shift, and go to state 42
    '<'           shift, and go to state 43
    '>'           shift, and go to state 44
    '&'           shift, and go to state 45
    '|'           shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '*'           shift, and go to state 49
    '/'           shift, and go to state 50
    ')'           shift, and go to state 59


State 39

   55 expression: expression OPERATOR_LE • expression

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 60


State 40

   54 expression: expression OPERATOR_GE • expression

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 61


State 41

   53 expression: expression OPERATOR_EQ • expression

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 62


State 42

   52 expression: expression OPERATOR_DIF • expression

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 63


State 43

   48 expression: expression '<' • expression

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 64


State 44

   47 expression: expression '>' • expression

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 65


State 45

   49 expression: expression '&' • expression

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 66


State 46

   50 expression: expression '|' • expression

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 67


State 47

   43 expression: expression '+' • expression

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 68


State 48

   44 expression: expression '-' • expression

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 69


State 49

   46 expression: expression '*' • expression

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 70


State 50

   45 expression: expression '/' • expression

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 71


State 51

    6 declaration: type TK_IDENTIFIER '[' expression ']' • vectorInicialization ';'

    LIT_INT   shift, and go to state 15
    LIT_REAL  shift, and go to state 16
    LIT_CHAR  shift, and go to state 17

    $default  reduce using rule 11 (vectorInicialization)

    vectorInicialization  go to state 72
    literal               go to state 73


State 52

   16 block: '{' • commandList '}'

    KW_IF          shift, and go to state 74
    KW_OUTPUT      shift, and go to state 75
    KW_RETURN      shift, and go to state 76
    TK_IDENTIFIER  shift, and go to state 77
    ';'            shift, and go to state 78
    '{'            shift, and go to state 79

    $default  reduce using rule 36 (commandList)

    block        go to state 80
    command      go to state 81
    commandList  go to state 82


State 53

    5 declaration: type TK_IDENTIFIER '(' parameters ')' block •

    $default  reduce using rule 5 (declaration)


State 54

   20 parametersTail: ',' parameter • parametersTail

    ','  shift, and go to state 32

    $default  reduce using rule 19 (parametersTail)

    parametersTail  go to state 83


State 55

   58 expression: KW_INPUT '(' type • ')'

    ')'  shift, and go to state 84


State 56

   38 functionCall: TK_IDENTIFIER '(' expressionList • ')'

    ')'  shift, and go to state 85


State 57

   40 expressionList: expression • expressionListTail
   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 39
    OPERATOR_GE   shift, and go to state 40
    OPERATOR_EQ   shift, and go to state 41
    OPERATOR_DIF  shift, and go to state 42
    '<'           shift, and go to state 43
    '>'           shift, and go to state 44
    '&'           shift, and go to state 45
    '|'           shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '*'           shift, and go to state 49
    '/'           shift, and go to state 50
    ','           shift, and go to state 86

    $default  reduce using rule 41 (expressionListTail)

    expressionListTail  go to state 87


State 58

   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression
   60           | TK_IDENTIFIER '[' expression • ']'

    OPERATOR_LE   shift, and go to state 39
    OPERATOR_GE   shift, and go to state 40
    OPERATOR_EQ   shift, and go to state 41
    OPERATOR_DIF  shift, and go to state 42
    '<'           shift, and go to state 43
    '>'           shift, and go to state 44
    '&'           shift, and go to state 45
    '|'           shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '*'           shift, and go to state 49
    '/'           shift, and go to state 50
    ']'           shift, and go to state 88


State 59

   56 expression: '(' expression ')' •

    $default  reduce using rule 56 (expression)


State 60

   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression
   55           | expression OPERATOR_LE expression •

    '&'  shift, and go to state 45
    '|'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 55 (expression)


State 61

   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   54           | expression OPERATOR_GE expression •
   55           | expression • OPERATOR_LE expression

    '&'  shift, and go to state 45
    '|'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 54 (expression)


State 62

   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   53           | expression OPERATOR_EQ expression •
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    '&'  shift, and go to state 45
    '|'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 53 (expression)


State 63

   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   52           | expression OPERATOR_DIF expression •
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    '&'  shift, and go to state 45
    '|'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 52 (expression)


State 64

   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   48           | expression '<' expression •
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    '&'  shift, and go to state 45
    '|'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 48 (expression)


State 65

   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   47           | expression '>' expression •
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    '&'  shift, and go to state 45
    '|'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 47 (expression)


State 66

   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   49           | expression '&' expression •
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 49 (expression)


State 67

   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   50           | expression '|' expression •
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 50 (expression)


State 68

   43 expression: expression • '+' expression
   43           | expression '+' expression •
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 43 (expression)


State 69

   43 expression: expression • '+' expression
   44           | expression • '-' expression
   44           | expression '-' expression •
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 44 (expression)


State 70

   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   46           | expression '*' expression •
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    $default  reduce using rule 46 (expression)


State 71

   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   45           | expression '/' expression •
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    $default  reduce using rule 45 (expression)


State 72

    6 declaration: type TK_IDENTIFIER '[' expression ']' vectorInicialization • ';'

    ';'  shift, and go to state 89


State 73

   12 vectorInicialization: literal • vectorInicialization

    LIT_INT   shift, and go to state 15
    LIT_REAL  shift, and go to state 16
    LIT_CHAR  shift, and go to state 17

    $default  reduce using rule 11 (vectorInicialization)

    vectorInicialization  go to state 90
    literal               go to state 73


State 74

   22 command: KW_IF • '(' expression ')' command KW_ELSE command
   23        | KW_IF • '(' expression ')' command
   24        | KW_IF • '(' expression ')' KW_LOOP command

    '('  shift, and go to state 91


State 75

   26 command: KW_OUTPUT • outputParameters ';'

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 92
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal           go to state 26
    outputParameters  go to state 93
    functionCall      go to state 27
    expression        go to state 94


State 76

   25 command: KW_RETURN • expression ';'

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 95


State 77

   27 command: TK_IDENTIFIER • '[' expression ']' '=' expression ';'
   28        | TK_IDENTIFIER • '=' expression ';'

    '='  shift, and go to state 96
    '['  shift, and go to state 97


State 78

   30 command: ';' •

    $default  reduce using rule 30 (command)


State 79

   16 block: '{' • commandList '}'
   31 command: '{' • '}'

    KW_IF          shift, and go to state 74
    KW_OUTPUT      shift, and go to state 75
    KW_RETURN      shift, and go to state 76
    TK_IDENTIFIER  shift, and go to state 77
    ';'            shift, and go to state 78
    '{'            shift, and go to state 79
    '}'            shift, and go to state 98

    '}'  [reduce using rule 36 (commandList)]

    block        go to state 80
    command      go to state 81
    commandList  go to state 82


State 80

   29 command: block •

    $default  reduce using rule 29 (command)


State 81

   37 commandList: command • commandList

    KW_IF          shift, and go to state 74
    KW_OUTPUT      shift, and go to state 75
    KW_RETURN      shift, and go to state 76
    TK_IDENTIFIER  shift, and go to state 77
    ';'            shift, and go to state 78
    '{'            shift, and go to state 79

    $default  reduce using rule 36 (commandList)

    block        go to state 80
    command      go to state 81
    commandList  go to state 99


State 82

   16 block: '{' commandList • '}'

    '}'  shift, and go to state 100


State 83

   20 parametersTail: ',' parameter parametersTail •

    $default  reduce using rule 20 (parametersTail)


State 84

   58 expression: KW_INPUT '(' type ')' •

    $default  reduce using rule 58 (expression)


State 85

   38 functionCall: TK_IDENTIFIER '(' expressionList ')' •

    $default  reduce using rule 38 (functionCall)


State 86

   42 expressionListTail: ',' • expression expressionListTail

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 101


State 87

   40 expressionList: expression expressionListTail •

    $default  reduce using rule 40 (expressionList)


State 88

   60 expression: TK_IDENTIFIER '[' expression ']' •

    $default  reduce using rule 60 (expression)


State 89

    6 declaration: type TK_IDENTIFIER '[' expression ']' vectorInicialization ';' •

    $default  reduce using rule 6 (declaration)


State 90

   12 vectorInicialization: literal vectorInicialization •

    $default  reduce using rule 12 (vectorInicialization)


State 91

   22 command: KW_IF '(' • expression ')' command KW_ELSE command
   23        | KW_IF '(' • expression ')' command
   24        | KW_IF '(' • expression ')' KW_LOOP command

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 102


State 92

   33 outputParameters: LIT_STRING • outputParametersTail

    ','  shift, and go to state 103

    ','       [reduce using rule 34 (outputParametersTail)]
    $default  reduce using rule 34 (outputParametersTail)

    outputParametersTail  go to state 104


State 93

   26 command: KW_OUTPUT outputParameters • ';'

    ';'  shift, and go to state 105


State 94

   32 outputParameters: expression • outputParametersTail
   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 39
    OPERATOR_GE   shift, and go to state 40
    OPERATOR_EQ   shift, and go to state 41
    OPERATOR_DIF  shift, and go to state 42
    '<'           shift, and go to state 43
    '>'           shift, and go to state 44
    '&'           shift, and go to state 45
    '|'           shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '*'           shift, and go to state 49
    '/'           shift, and go to state 50
    ','           shift, and go to state 103

    ','       [reduce using rule 34 (outputParametersTail)]
    $default  reduce using rule 34 (outputParametersTail)

    outputParametersTail  go to state 106


State 95

   25 command: KW_RETURN expression • ';'
   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 39
    OPERATOR_GE   shift, and go to state 40
    OPERATOR_EQ   shift, and go to state 41
    OPERATOR_DIF  shift, and go to state 42
    '<'           shift, and go to state 43
    '>'           shift, and go to state 44
    '&'           shift, and go to state 45
    '|'           shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '*'           shift, and go to state 49
    '/'           shift, and go to state 50
    ';'           shift, and go to state 107


State 96

   28 command: TK_IDENTIFIER '=' • expression ';'

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 108


State 97

   27 command: TK_IDENTIFIER '[' • expression ']' '=' expression ';'

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 109


State 98

   31 command: '{' '}' •

    $default  reduce using rule 31 (command)


State 99

   37 commandList: command commandList •

    $default  reduce using rule 37 (commandList)


State 100

   16 block: '{' commandList '}' •

    $default  reduce using rule 16 (block)


State 101

   42 expressionListTail: ',' expression • expressionListTail
   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 39
    OPERATOR_GE   shift, and go to state 40
    OPERATOR_EQ   shift, and go to state 41
    OPERATOR_DIF  shift, and go to state 42
    '<'           shift, and go to state 43
    '>'           shift, and go to state 44
    '&'           shift, and go to state 45
    '|'           shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '*'           shift, and go to state 49
    '/'           shift, and go to state 50
    ','           shift, and go to state 86

    $default  reduce using rule 41 (expressionListTail)

    expressionListTail  go to state 110


State 102

   22 command: KW_IF '(' expression • ')' command KW_ELSE command
   23        | KW_IF '(' expression • ')' command
   24        | KW_IF '(' expression • ')' KW_LOOP command
   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 39
    OPERATOR_GE   shift, and go to state 40
    OPERATOR_EQ   shift, and go to state 41
    OPERATOR_DIF  shift, and go to state 42
    '<'           shift, and go to state 43
    '>'           shift, and go to state 44
    '&'           shift, and go to state 45
    '|'           shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '*'           shift, and go to state 49
    '/'           shift, and go to state 50
    ')'           shift, and go to state 111


State 103

   35 outputParametersTail: ',' • outputParameters outputParametersTail

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    LIT_STRING     shift, and go to state 92
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal           go to state 26
    outputParameters  go to state 112
    functionCall      go to state 27
    expression        go to state 94


State 104

   33 outputParameters: LIT_STRING outputParametersTail •

    $default  reduce using rule 33 (outputParameters)


State 105

   26 command: KW_OUTPUT outputParameters ';' •

    $default  reduce using rule 26 (command)


State 106

   32 outputParameters: expression outputParametersTail •

    $default  reduce using rule 32 (outputParameters)


State 107

   25 command: KW_RETURN expression ';' •

    $default  reduce using rule 25 (command)


State 108

   28 command: TK_IDENTIFIER '=' expression • ';'
   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 39
    OPERATOR_GE   shift, and go to state 40
    OPERATOR_EQ   shift, and go to state 41
    OPERATOR_DIF  shift, and go to state 42
    '<'           shift, and go to state 43
    '>'           shift, and go to state 44
    '&'           shift, and go to state 45
    '|'           shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '*'           shift, and go to state 49
    '/'           shift, and go to state 50
    ';'           shift, and go to state 113


State 109

   27 command: TK_IDENTIFIER '[' expression • ']' '=' expression ';'
   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 39
    OPERATOR_GE   shift, and go to state 40
    OPERATOR_EQ   shift, and go to state 41
    OPERATOR_DIF  shift, and go to state 42
    '<'           shift, and go to state 43
    '>'           shift, and go to state 44
    '&'           shift, and go to state 45
    '|'           shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '*'           shift, and go to state 49
    '/'           shift, and go to state 50
    ']'           shift, and go to state 114


State 110

   42 expressionListTail: ',' expression expressionListTail •

    $default  reduce using rule 42 (expressionListTail)


State 111

   22 command: KW_IF '(' expression ')' • command KW_ELSE command
   23        | KW_IF '(' expression ')' • command
   24        | KW_IF '(' expression ')' • KW_LOOP command

    KW_IF          shift, and go to state 74
    KW_LOOP        shift, and go to state 115
    KW_OUTPUT      shift, and go to state 75
    KW_RETURN      shift, and go to state 76
    TK_IDENTIFIER  shift, and go to state 77
    ';'            shift, and go to state 78
    '{'            shift, and go to state 79

    block    go to state 80
    command  go to state 116


State 112

   35 outputParametersTail: ',' outputParameters • outputParametersTail

    ','  shift, and go to state 103

    ','       [reduce using rule 34 (outputParametersTail)]
    $default  reduce using rule 34 (outputParametersTail)

    outputParametersTail  go to state 117


State 113

   28 command: TK_IDENTIFIER '=' expression ';' •

    $default  reduce using rule 28 (command)


State 114

   27 command: TK_IDENTIFIER '[' expression ']' • '=' expression ';'

    '='  shift, and go to state 118


State 115

   24 command: KW_IF '(' expression ')' KW_LOOP • command

    KW_IF          shift, and go to state 74
    KW_OUTPUT      shift, and go to state 75
    KW_RETURN      shift, and go to state 76
    TK_IDENTIFIER  shift, and go to state 77
    ';'            shift, and go to state 78
    '{'            shift, and go to state 79

    block    go to state 80
    command  go to state 119


State 116

   22 command: KW_IF '(' expression ')' command • KW_ELSE command
   23        | KW_IF '(' expression ')' command •

    KW_ELSE  shift, and go to state 120

    KW_ELSE   [reduce using rule 23 (command)]
    $default  reduce using rule 23 (command)


State 117

   35 outputParametersTail: ',' outputParameters outputParametersTail •

    $default  reduce using rule 35 (outputParametersTail)


State 118

   27 command: TK_IDENTIFIER '[' expression ']' '=' • expression ';'

    KW_INPUT       shift, and go to state 22
    TK_IDENTIFIER  shift, and go to state 23
    LIT_INT        shift, and go to state 15
    LIT_REAL       shift, and go to state 16
    LIT_CHAR       shift, and go to state 17
    '~'            shift, and go to state 24
    '('            shift, and go to state 25

    literal       go to state 26
    functionCall  go to state 27
    expression    go to state 121


State 119

   24 command: KW_IF '(' expression ')' KW_LOOP command •

    $default  reduce using rule 24 (command)


State 120

   22 command: KW_IF '(' expression ')' command KW_ELSE • command

    KW_IF          shift, and go to state 74
    KW_OUTPUT      shift, and go to state 75
    KW_RETURN      shift, and go to state 76
    TK_IDENTIFIER  shift, and go to state 77
    ';'            shift, and go to state 78
    '{'            shift, and go to state 79

    block    go to state 80
    command  go to state 122


State 121

   27 command: TK_IDENTIFIER '[' expression ']' '=' expression • ';'
   43 expression: expression • '+' expression
   44           | expression • '-' expression
   45           | expression • '/' expression
   46           | expression • '*' expression
   47           | expression • '>' expression
   48           | expression • '<' expression
   49           | expression • '&' expression
   50           | expression • '|' expression
   52           | expression • OPERATOR_DIF expression
   53           | expression • OPERATOR_EQ expression
   54           | expression • OPERATOR_GE expression
   55           | expression • OPERATOR_LE expression

    OPERATOR_LE   shift, and go to state 39
    OPERATOR_GE   shift, and go to state 40
    OPERATOR_EQ   shift, and go to state 41
    OPERATOR_DIF  shift, and go to state 42
    '<'           shift, and go to state 43
    '>'           shift, and go to state 44
    '&'           shift, and go to state 45
    '|'           shift, and go to state 46
    '+'           shift, and go to state 47
    '-'           shift, and go to state 48
    '*'           shift, and go to state 49
    '/'           shift, and go to state 50
    ';'           shift, and go to state 123


State 122

   22 command: KW_IF '(' expression ')' command KW_ELSE command •

    $default  reduce using rule 22 (command)


State 123

   27 command: TK_IDENTIFIER '[' expression ']' '=' expression ';' •

    $default  reduce using rule 27 (command)
